---
title: "Project title"
subtitle: "STA/ISS 313 - Project 1"
author: "SKAZ"
format: html
editor: visual
echo: FALSE
message: FALSE
warning: FALSE
---

## Abstract

(1 paragraph): Project abstract.

------------------------------------------------------------------------

```{r load-data}
library(tidyverse)
library(bakeoff)
library(lubridate)
library(plotly)
```

## Introduction

(1-2 paragraphs): Brief introduction to the dataset. You may repeat some of the information about the dataset provided in the introduction to the dataset on the TidyTuesday repository, paraphrasing on your own terms. Imagine that your project is a standalone document and the grader has no prior knowledge of the dataset.

## Question 1: How does a baker’s age and their performance in the technical challenges correlate to the total number of episodes they appear in/how many episodes they last for?


### Introduction

(1-2 paragraphs): Introduction to the question and what parts of the dataset are necessary to answer the question. Also discuss why you're interested in this question.

### Approach

(1-2 paragraphs): Describe what types of plots you are going to make to address your question. For each plot, provide a clear explanation as to why this plot (e.g. boxplot, barplot, histogram, etc.) is best for providing the information you are asking about. The two plots should be of different types, and at least one of the two plots needs to use either color mapping or facets.

### Analysis

```{r age-data-wrangling}
bakers <- bakers |>
  separate(col = first_date_appeared, remove = FALSE, sep = "-", into = "first_year_appeared")

bakers <- bakers |>
  mutate(first_year_appeared = case_when(series == 9 ~ "2018",
                                         series == 10 ~ "2019",
                                         TRUE ~ first_year_appeared))
bakers <- bakers |>
  mutate(birth_year = as.numeric(first_year_appeared) - age) |>
  mutate(age_generation = case_when(birth_year >= 1928 & birth_year <= 1945 ~ "Silent Generation",
                                birth_year >= 1946 & birth_year <= 1964 ~ "Baby Boomers",
                                birth_year >= 1965 & birth_year <= 1980 ~ "Gen X",
                                birth_year >= 1981 & birth_year <= 1996 ~ "Millenials",
                                birth_year >= 1997 & birth_year <= 2012 ~ "Gen Z"))|>
  mutate(baker_stats = paste(baker_full, "\n Birth Year:",birth_year,"\n Age:",age," \n Hometown:",hometown,"\n Occupation:", occupation))|>
  mutate_if(is.numeric, round, digits = 1)
```

text = stats

```{r first-plot}
plot1 <- ggplot(bakers, aes(x = technical_bottom, y = percent_episodes_appeared)) +
  geom_point(shape = 1, color = "red",aes(text = baker_stats)) +
  geom_smooth(aes(x = technical_bottom, color = "# of Bottom 3 Appearances"), se= FALSE) +
  geom_point(aes(x = technical_top3, text = baker_stats), shape = 16, color = "darkgreen") +
  geom_smooth(aes(x = technical_top3, color = "# of Top 3 Appearances"), se = FALSE) +
  facet_wrap(~factor(age_generation, levels = c("Baby Boomers", "Gen X", "Millenials", "Silent Generation", "Gen Z"))) +
  labs(y = "Percentage of Episodes Appeared In",
       x = "Number of Times Appearing in Technial Top or Bottom 3",
       title = "Episode Appearances vs. Top/Bottom 3 Performance",
       subtitle = "By Age Generation of Bakers from Great British Baking Show") +
  scale_color_manual(name = NULL,
    breaks=c('# of Bottom 3 Appearances', '# of Top 3 Appearances'),
                     values=c('# of Bottom 3 Appearances'='red', '# of Top 3 Appearances'='darkgreen')) +
  theme_bw() +
  theme(legend.position = c(0.85, 0.275))

ggplotly(plot1)
```

```{r second-plot}
plot2 <- ggplot(bakers, aes(x = technical_lowest, y = percent_episodes_appeared)) +
  geom_point(shape = 1, color = "red",aes(text = baker_stats)) +
  geom_smooth(aes(x = technical_lowest, color = "# of Bottom Appearances"), se= FALSE) +
  geom_point(aes(x = technical_highest, text = baker_stats), shape = 16, color = "darkgreen") +
  geom_smooth(aes(x = technical_highest, color = "# of Top Appearances"), se = FALSE) +
  facet_wrap(~factor(age_generation, levels = c("Baby Boomers", "Gen X", "Millenials", "Silent Generation", "Gen Z"))) +
  labs(y = "Percentage of Episodes Appeared In",
       x = "Number of Times Appearing in Technial Top or Bottom 3",
       title = "Episode Appearances vs. Top/Bottom Performance",
       subtitle = "By Age Generation of Bakers from Great British Baking Show") +
  scale_color_manual(name = NULL,
    breaks=c('# of Bottom Appearances', '# of Top Appearances'),
                     values=c('# of Bottom Appearances'='red', '# of Top Appearances'='darkgreen')) +
  theme_bw() +
  theme(legend.position = c(0.85, 0.275))

ggplotly(plot2)
```

(2-3 code blocks, 2 figures, text/code comments as needed): In this section, provide the code that generates your plots. Use scale functions to provide nice axis labels and guides. You are welcome to use theme functions to customize the appearance of your plot, but you are not required to do so. All plots must be made with **ggplot2**. Do not use base R or lattice plotting functions.

### Discussion

(1-3 paragraphs): In the Discussion section, interpret the results of your analysis. Identify any trends revealed (or not revealed) by the plots. Speculate about why the data looks the way it does.

## Question 2: How do the different characteristics of each season and the progression of episodes within each season influence the show’s viewership?

```{r Q2-plot1}

ratings_ppl <- ratings |>
  group_by(series)|>
  
  mutate(viewers_7day_mean = mean(viewers_7day)) |>
  mutate(presenters = case_when(
    series <=7 ~ "Sue Perkins & Mel Giedroyc",
    series >=8 & series <=10 ~ "Noel Fielding & Sandi Toksvig"
  ))|>
  mutate(judges = case_when(
    series <= 7 ~ "Paul Hollywood & Mary Berry",
    series >= 8 ~ "Paul Hollywood & Prue Leith"
  )) |>
  mutate(channel = case_when(
    series <= 4 ~ "BBC Two",
    series >4 & series <8 ~ "BBC One", 
    series >= 8 ~ "Channel 4"
  )) 

format <- tribble(
  ~box_min, ~box_max, ~color_f,      ~channel_f,
  0,        4,        "darkgreen",   "BBC Two",
  4,        7,        "darkblue",   "BBC One",
  7,        11,       "darkred",   "Channel 4"
  )

ggplot()+
  scale_color_manual(values = c("darkgreen", "darkblue", "darkred"))+
  geom_rect(data = format, 
    aes(xmin = box_min, xmax = box_max,
        ymin = 0, ymax = Inf,
        fill = channel_f, y = NULL, x = NULL))+
  #geom_point(data = ratings_ppl, aes(x = factor(series), y = viewers_7day_mean, color = presenters), size = 3)+
  geom_bar(data = ratings_ppl, aes( x = factor(series), y = viewers_7day_mean, fill = presenters),stat="identity", width=.75)+
  theme_minimal()+
  labs(
    title = "Number of Viewers across Series",
    x = "Series",
    y = "Mean 7 Day Viewership (by millions)",
    fill = "Channels",
    color = "Presenters"
  )

```

```{r Q2-plot2}

library(tidyverse)
library(bakeoff)
library(dplyr)
library(ggridges)
library(scales)

new_ratings <-
  ratings |>
  mutate(
    episode = as.factor(episode),
    series = as.factor(series))

#per_episode <-
#  ratings |>
#  group_by(episode) |>
#  mutate(episode_mean = mean(viewers_7day))

ggplot(new_ratings, aes(x=viewers_7day, y=episode)) +
  geom_density_ridges_gradient(aes(fill=episode), scale=1, rel_min_height=0.01, show.legend = FALSE) +
  geom_vline(aes(xintercept=median(viewers_7day)))+
#  geom_point(data=per_episode, aes(x=episode_mean, y=episode))+
#  geom_line(data=per_episode, aes(x=episode_mean, y=episode))+
  annotate("text", x=8.6, y=5.9, label="Median", angle=90, fontface="bold")+
  scale_fill_bakeoff(palette="showstopper")+
  labs(x= "Viewers (in Millions)",
       y= "Episode Number",
       title= "Ridge densities of number of viewers in 7-day period per episode",
       caption= "Source: TidyTuesday (October 25th, 2022)")+
  theme_minimal()


```

### Introduction

(1-2 paragraphs): Introduction to the question and what parts of the dataset are necessary to answer the question. Also discuss why you're interested in this question.

--> One of the most objective measures of a TV show or Movie's success is the number of viewers. As such, we decided to investigate how changes in format and platform impact the viewership as well as how viewership changes throughout seasons. In order to properly answer these questions we drew on data from Wikipedia(https://en.wikipedia.org/wiki/The_Great_British_Bake_Off) about the different channels, hosts, and judges, adding them to the ratings_ppl dataset as `presenters`, `judges`, and `channel` respectively. We also use the group_by and mutate functions to find the mean 7-day viewership for across each season. 



### Approach

(1-2 paragraphs): Describe what types of plots you are going to make to address your question. For each plot, provide a clear explanation as to why this plot (e.g.boxplot, barplot, histogram, etc.) is best for providing the information you are asking about. The two plots should be of different types, and at least one of the two plots needs to use either color mapping or facets.

--> In order to compare the viewership distribution based on the presenters and network the show was on (which vary by season), we will plot the mean 7-day viewership for each season in relation to multiple different variables. The 7-day viewership gives an understanding of how many fans of the show are watching the show regularly. The first graph will plot mean viewership alongside visual prompts which show changes in channels and presenters so that it is easily seen how those changes can potentially effect viewership. 

The second graph will explore how viewership changes throughout the season... SAAD ADD HERE


### Analysis

(2-3 code blocks, 2 figures, text/code comments as needed): In this section, provide the code that generates your plots. Use scale functions to provide nice axis labels and guides. You are welcome to use theme functions to customize the appearance of your plot, but you are not required to do so. All plots must be made with **ggplot2**. Do not use base R or lattice plotting functions.

### Discussion

(1-3 paragraphs): In the Discussion section, interpret the results of your analysis. Identify any trends revealed (or not revealed) by the plots. Speculate about why the data looks the way it does.

--> The first graph shows how changes in the Channels and Presenters can both positively and negatively effect a shows viewership. When the show switches from BBC Two from BBC one, viewership continues its upward trend at an even greater rate. However, after season seven when the show switches channels and presenters, viewership not only drops dramatically but also sits stagnant. 
